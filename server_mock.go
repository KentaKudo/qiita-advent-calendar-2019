// Code generated by MockGen. DO NOT EDIT.
// Source: server.go

// Package main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTodoManager is a mock of todoManager interface
type MockTodoManager struct {
	ctrl     *gomock.Controller
	recorder *MockTodoManagerMockRecorder
}

// MockTodoManagerMockRecorder is the mock recorder for MockTodoManager
type MockTodoManagerMockRecorder struct {
	mock *MockTodoManager
}

// NewMockTodoManager creates a new mock instance
func NewMockTodoManager(ctrl *gomock.Controller) *MockTodoManager {
	mock := &MockTodoManager{ctrl: ctrl}
	mock.recorder = &MockTodoManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTodoManager) EXPECT() *MockTodoManagerMockRecorder {
	return m.recorder
}

// projectTodo mocks base method
func (m *MockTodoManager) projectTodo(arg0 todo) (string, error) {
	ret := m.ctrl.Call(m, "projectTodo", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// projectTodo indicates an expected call of projectTodo
func (mr *MockTodoManagerMockRecorder) projectTodo(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "projectTodo", reflect.TypeOf((*MockTodoManager)(nil).projectTodo), arg0)
}
